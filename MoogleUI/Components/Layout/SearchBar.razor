@*
    File: SearchBar.razor
    Component: UI Components
*@

@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

<div class="search-bar-container">
    <input type="text" class="search-input" placeholder="Enter your search query..." @bind="_searchQuery" @onkeyup="HandleKeyUp" />
    <button class="search-button" @onclick="SubmitSearch">Search</button>
</div>

@code {
    /// <summary>
    /// The current text entered into the search bar by the user.
    /// </summary>
    private string _searchQuery = string.Empty;

    /// <summary>
    /// An event callback that is invoked when the user submits a search query.
    /// The parent component will handle this event to perform the actual search.
    /// </summary>
    [Parameter]
    public EventCallback<string> OnSearchSubmitted { get; set; }

    /// <summary>
    /// Invokes the OnSearchSubmitted event callback with the current search query.
    /// This method is called when the search button is clicked.
    /// </summary>
    /// <returns>A Task representing the asynchronous operation.</returns>
    private Task SubmitSearch()
    {
        // 3. It's good practice to also check if _searchQuery is not null or whitespace before invoking.
        if (!string.IsNullOrWhiteSpace(_searchQuery))
        {
            // 1. Check if the OnSearchSubmitted callback has a delegate assigned.
            // 2. If it does, invoke it with the current value of _searchQuery.
            // Note: InvokeAsync handles the check for a delegate internally.
            return OnSearchSubmitted.InvokeAsync(_searchQuery);
        }
        return Task.CompletedTask;
    }

    /// <summary>
    /// Handles the key up event on the search input.
    /// If the user presses the "Enter" key, it triggers the search submission.
    /// </summary>
    /// <param name="e">The keyboard event arguments.</param>
    /// <returns>A Task representing the asynchronous operation.</returns>
    private Task HandleKeyUp(KeyboardEventArgs e)
    {
        // 1. Check if the key pressed was the "Enter" key (e.Key == "Enter").
        if (e.Key == "Enter")
        {
            // 2. If it was, call the SubmitSearch() method.
            return SubmitSearch();
        }
        return Task.CompletedTask;
    }
}
